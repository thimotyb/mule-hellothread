<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" doc:id="e31b84a5-4be0-4a83-b7dc-b20986adcb1b" >
		<http:listener-connection host="0.0.0.0" port="8081" />
	</http:listener-config>
	<http:request-config name="HTTP_Request_configuration" doc:name="HTTP Request configuration" doc:id="2d04f6af-bf04-4ebc-b159-136d10c5148c" >
		<http:request-connection host="localhost" port="8081" />
	</http:request-config>
	<flow name="hellothreadsFlow2" doc:id="93584eab-8949-47f3-98d2-1fe9cc0d6f82" doc:description="Start helloseq with visualvm. You should notice two uber threads switching back and forth to sleep. This is because foreach keeps sequential processing but the scheduler puts the running thread on hold and uses another one to go on. (look for the purple wait bar)">
		<http:listener doc:name="GET /helloseq" doc:id="78b9a3e8-1244-42c7-b81e-cb4956356afe" config-ref="HTTP_Listener_config" path="/helloseq"/>
		<ee:transform doc:name="Copy_of_Transform Message" doc:id="3a854894-e4a5-4306-a3c1-e2259c375839" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
[1,2,3,4,5,6,7,1,2,3,4,5,6,71,2,3,4,5,6,71,2,3,4,5,6,71,2,3,4,5,6,71,2,3,4,5,6,71,2,3,4,5,6,71,2,3,4,5,6,71,2,3,4,5,6,71,2,3,4,5,6,71,2,3,4,5,6,71,2,3,4,5,6,71,2,3,4,5,6,71,2,3,4,5,6,71,2,3,4,5,6,7]]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<foreach doc:name="For Each" doc:id="a2f32d5e-4973-400a-ba5f-35982a0d6e15">
			<http:request method="GET" doc:name="Copy_of_Request" doc:id="4a7a337d-3bbb-4629-9b69-acc450c36988" config-ref="HTTP_Request_configuration" path="/ping" />
			<ee:transform doc:name="Copy_of_Transform Message" doc:id="781ea7ba-c335-4a6a-865b-5e9fed60fb0c" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
import * from dw::Runtime
output application/json
---
{ 

  "user" : 1, 
  "site": payload
} wait 2000]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<logger level="INFO" doc:name="Copy_of_Logger" doc:id="b2e21241-a25f-4940-b990-1679ccf2fcba" message="#[payload]" />
		</foreach>
		<ee:transform doc:name="Copy_of_Transform Message" doc:id="da42919b-f115-47ef-8017-35c72a6e0630" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="hellothreadsFlow" doc:id="d77c467f-df18-4a03-8c7a-c42a30f89cd7" doc:description="Start helloparaller. You should see all you 2*cores uber threads engaged at the same time (look for the purple wait bar)">
		<http:listener doc:name="GET /helloparallel" doc:id="3ebadbce-c018-4bc3-99a1-d33ff888c437" config-ref="HTTP_Listener_config" path="/helloparallel" allowedMethods="GET"/>
		<ee:transform doc:name="Transform Message" doc:id="ad3b62ab-b3b4-45bd-b671-b9cd425f572f" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
[1,2,3,4,5,6,7,1,2,3,4,5,6,71,2,3,4,5,6,71,2,3,4,5,6,71,2,3,4,5,6,71,2,3,4,5,6,71,2,3,4,5,6,71,2,3,4,5,6,71,2,3,4,5,6,71,2,3,4,5,6,71,2,3,4,5,6,71,2,3,4,5,6,71,2,3,4,5,6,71,2,3,4,5,6,71,2,3,4,5,6,7]]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<parallel-foreach doc:name="Parallel For Each" doc:id="d373bf53-a2f7-4d2b-8d5c-4e562c8c9715" >
			<http:request method="GET" doc:name="Request" doc:id="a09f9b75-b08e-486c-b20c-c1b23aa6aa4e" config-ref="HTTP_Request_configuration" path="/ping" />
			<ee:transform doc:name="Transform Message" doc:id="d0749627-5d61-4fc2-a36e-4c5132b59a54">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
import * from dw::Runtime
output application/json
---
{ 

  "user" : 1, 
  "site": payload
} wait 2000]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			<logger level="INFO" doc:name="Logger" doc:id="dc4a418b-3c49-4a5c-85b3-2edba87bdffd" message="#[payload]" />
		</parallel-foreach>
		<ee:transform doc:name="Transform Message" doc:id="feb157d2-b0ed-4bb1-95fc-2c6b988f7193" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="hellothreadsFlow1" doc:id="c9b48d38-dd65-4dbc-b1af-ccdf7a1c177c" >
		<http:listener doc:name="Listener" doc:id="f0153c71-835f-4a45-9e0d-b0d0193c4fe6" config-ref="HTTP_Listener_config" path="/ping"/>
		<ee:transform doc:name="Transform Message" doc:id="347dbb5d-6491-4530-9e39-0de8620b77e3" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
import * from dw::Runtime
output application/json
---
{ 
  "user" : 1
} wait 500]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
</mule>
